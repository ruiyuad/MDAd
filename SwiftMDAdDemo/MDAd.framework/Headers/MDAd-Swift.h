#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MDAd",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




/// A class inherited from NSObject and manages the global settings such as log print.
SWIFT_CLASS("_TtC4MDAd13RYAdMobCenter")
@interface RYAdMobCenter : NSObject
/// Singleton.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RYAdMobCenter * _Nonnull center;)
+ (RYAdMobCenter * _Nonnull)center SWIFT_WARN_UNUSED_RESULT;
/// Enables logs print under <code>Debug</code> mode. Default is false.
/// <ul>
///   <li>
///     Parameters isEnabled: A boolean indicates that whether the function of debug print is enabled. True is enabled. otherwise, debug print is disenabled.
///   </li>
/// </ul>
- (void)enableDebugPrint:(BOOL)isEnabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol RYBannerViewDelegate;
@class NSCoder;

/// The view that displays banner ads.
SWIFT_CLASS("_TtC4MDAd12RYBannerView")
@interface RYBannerView : UIView
/// Indicates that banner ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYBannerView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYBannerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Requests a banner ad.
- (void)loadRequest;
@end



@class RYError;

/// Delegate methods for receiving RYBannerView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd20RYBannerViewDelegate_")
@protocol RYBannerViewDelegate <NSObject>
@optional
/// Tells the delegate that an ad request successfully received an ad.
- (void)adViewDidReceiveAd:(RYBannerView * _Nonnull)bannerView;
/// Tells the delegate that an ad request failed.
- (void)adViewDidFailToReceiveAd:(RYBannerView * _Nonnull)bannerView error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)adViewWillLeaveApplication:(RYBannerView * _Nonnull)bannerView;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end

@protocol RYBuoyViewDelegate;

/// The view that displays buoy ads.
SWIFT_CLASS("_TtC4MDAd10RYBuoyView")
@interface RYBuoyView : UIView
/// Indicates that buoy ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYBuoyView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYBuoyViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Requests a buoy ad.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYBuoyView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd18RYBuoyViewDelegate_")
@protocol RYBuoyViewDelegate <NSObject>
@optional
/// Tells the delegate that an ad request successfully received an ad.
- (void)buoyViewDidReceiveAd:(RYBuoyView * _Nonnull)buoyView;
/// Tells the delegate that an ad request failed.
- (void)buoyViewDidFailToReceiveAd:(RYBuoyView * _Nonnull)buoyView error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)adViewWillLeaveApplication:(RYBuoyView * _Nonnull)buoyView;
/// Tell the delegate that the user did clicked the close button.
- (void)buoyViewDidClose;
@end


SWIFT_CLASS("_TtC4MDAd7RYError")
@interface RYError : NSObject
@property (nonatomic, copy) NSString * _Nullable errorDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol RYInfoFlowViewDelegate;

/// An information ad. This is a advertisement shown in list such as UITableView and UICollectionView.
SWIFT_CLASS("_TtC4MDAd14RYInfoFlowView")
@interface RYInfoFlowView : UIView
/// Indicates that information flow ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYInfoFlowView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYInfoFlowViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Request an information flow ad.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYInfoFlowView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd22RYInfoFlowViewDelegate_")
@protocol RYInfoFlowViewDelegate <NSObject>
@optional
/// Tells the delegate that an ad request successfully received an ad.
- (void)infoFlowViewDidReceiveAd:(RYInfoFlowView * _Nonnull)infoFlowView;
/// Tells the delegate that an ad request failed.
- (void)infoFlowDidFailToReceiveAd:(RYInfoFlowView * _Nonnull)infoFlowView error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)adViewWillLeaveApplication:(RYInfoFlowView * _Nonnull)infoFlowView;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end

@protocol RYInterstitialHalfViewDelegate;

/// An half interstitial ad.
SWIFT_CLASS("_TtC4MDAd22RYInterstitialHalfView")
@interface RYInterstitialHalfView : UIView
/// Indicates that ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYInterstitialHalfView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYInterstitialHalfViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Loads request for interstitials.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYInterstitialHalfView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd30RYInterstitialHalfViewDelegate_")
@protocol RYInterstitialHalfViewDelegate <NSObject>
@optional
/// Called when an half interstitial ad request succeeded.
- (void)interstitialHalfDidReceiveAd:(RYInterstitialHalfView * _Nonnull)interstitial;
/// Called when an interstitial ad request completed without an interstitial to show.
- (void)interstitialHalfDidFailToReceiveAd:(RYInterstitialHalfView * _Nonnull)interstitial error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)interstitialHalfWillLeaveApplication:(RYInterstitialHalfView * _Nonnull)interstitial;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end

@protocol RYInterstitialViewDelegate;

/// An interstitial ad. This is a full-screen advertisement shown at
/// natural transition points in your application such as between games.
SWIFT_CLASS("_TtC4MDAd18RYInterstitialView")
@interface RYInterstitialView : UIView
/// Indicates that ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYInterstitialView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYInterstitialViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Loads request for interstitials.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYInterstitialView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd26RYInterstitialViewDelegate_")
@protocol RYInterstitialViewDelegate <NSObject>
@optional
/// Called when an interstitial ad request succeeded.
- (void)interstitialDidReceiveAd:(RYInterstitialView * _Nonnull)interstitial;
/// Called when an interstitial ad request completed without an interstitial to show.
- (void)interstitialDidFailToReceiveAd:(RYInterstitialView * _Nonnull)interstitial error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)interstitialWillLeaveApplication:(RYInterstitialView * _Nonnull)interstitial;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MDAd",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




/// A class inherited from NSObject and manages the global settings such as log print.
SWIFT_CLASS("_TtC4MDAd13RYAdMobCenter")
@interface RYAdMobCenter : NSObject
/// Singleton.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RYAdMobCenter * _Nonnull center;)
+ (RYAdMobCenter * _Nonnull)center SWIFT_WARN_UNUSED_RESULT;
/// Enables logs print under <code>Debug</code> mode. Default is false.
/// <ul>
///   <li>
///     Parameters isEnabled: A boolean indicates that whether the function of debug print is enabled. True is enabled. otherwise, debug print is disenabled.
///   </li>
/// </ul>
- (void)enableDebugPrint:(BOOL)isEnabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol RYBannerViewDelegate;
@class NSCoder;

/// The view that displays banner ads.
SWIFT_CLASS("_TtC4MDAd12RYBannerView")
@interface RYBannerView : UIView
/// Indicates that banner ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYBannerView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYBannerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Requests a banner ad.
- (void)loadRequest;
@end



@class RYError;

/// Delegate methods for receiving RYBannerView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd20RYBannerViewDelegate_")
@protocol RYBannerViewDelegate <NSObject>
@optional
/// Tells the delegate that an ad request successfully received an ad.
- (void)adViewDidReceiveAd:(RYBannerView * _Nonnull)bannerView;
/// Tells the delegate that an ad request failed.
- (void)adViewDidFailToReceiveAd:(RYBannerView * _Nonnull)bannerView error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)adViewWillLeaveApplication:(RYBannerView * _Nonnull)bannerView;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end

@protocol RYBuoyViewDelegate;

/// The view that displays buoy ads.
SWIFT_CLASS("_TtC4MDAd10RYBuoyView")
@interface RYBuoyView : UIView
/// Indicates that buoy ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYBuoyView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYBuoyViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Requests a buoy ad.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYBuoyView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd18RYBuoyViewDelegate_")
@protocol RYBuoyViewDelegate <NSObject>
@optional
/// Tells the delegate that an ad request successfully received an ad.
- (void)buoyViewDidReceiveAd:(RYBuoyView * _Nonnull)buoyView;
/// Tells the delegate that an ad request failed.
- (void)buoyViewDidFailToReceiveAd:(RYBuoyView * _Nonnull)buoyView error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)adViewWillLeaveApplication:(RYBuoyView * _Nonnull)buoyView;
/// Tell the delegate that the user did clicked the close button.
- (void)buoyViewDidClose;
@end


SWIFT_CLASS("_TtC4MDAd7RYError")
@interface RYError : NSObject
@property (nonatomic, copy) NSString * _Nullable errorDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol RYInfoFlowViewDelegate;

/// An information ad. This is a advertisement shown in list such as UITableView and UICollectionView.
SWIFT_CLASS("_TtC4MDAd14RYInfoFlowView")
@interface RYInfoFlowView : UIView
/// Indicates that information flow ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYInfoFlowView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYInfoFlowViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Request an information flow ad.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYInfoFlowView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd22RYInfoFlowViewDelegate_")
@protocol RYInfoFlowViewDelegate <NSObject>
@optional
/// Tells the delegate that an ad request successfully received an ad.
- (void)infoFlowViewDidReceiveAd:(RYInfoFlowView * _Nonnull)infoFlowView;
/// Tells the delegate that an ad request failed.
- (void)infoFlowDidFailToReceiveAd:(RYInfoFlowView * _Nonnull)infoFlowView error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)adViewWillLeaveApplication:(RYInfoFlowView * _Nonnull)infoFlowView;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end

@protocol RYInterstitialHalfViewDelegate;

/// An half interstitial ad.
SWIFT_CLASS("_TtC4MDAd22RYInterstitialHalfView")
@interface RYInterstitialHalfView : UIView
/// Indicates that ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYInterstitialHalfView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYInterstitialHalfViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Loads request for interstitials.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYInterstitialHalfView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd30RYInterstitialHalfViewDelegate_")
@protocol RYInterstitialHalfViewDelegate <NSObject>
@optional
/// Called when an half interstitial ad request succeeded.
- (void)interstitialHalfDidReceiveAd:(RYInterstitialHalfView * _Nonnull)interstitial;
/// Called when an interstitial ad request completed without an interstitial to show.
- (void)interstitialHalfDidFailToReceiveAd:(RYInterstitialHalfView * _Nonnull)interstitial error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)interstitialHalfWillLeaveApplication:(RYInterstitialHalfView * _Nonnull)interstitial;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end

@protocol RYInterstitialViewDelegate;

/// An interstitial ad. This is a full-screen advertisement shown at
/// natural transition points in your application such as between games.
SWIFT_CLASS("_TtC4MDAd18RYInterstitialView")
@interface RYInterstitialView : UIView
/// Indicates that ads id.
@property (nonatomic, copy) NSString * _Nullable adsID;
/// Optional delegate object that receives state change notifications from this RYInterstitialView. Typically this is a UIViewController.
@property (nonatomic, weak) id <RYInterstitialViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Loads request for interstitials.
- (void)loadRequest;
@end




/// Delegate methods for receiving RYInterstitialView state change messages such as ad request status and ad click lifecycle.
SWIFT_PROTOCOL("_TtP4MDAd26RYInterstitialViewDelegate_")
@protocol RYInterstitialViewDelegate <NSObject>
@optional
/// Called when an interstitial ad request succeeded.
- (void)interstitialDidReceiveAd:(RYInterstitialView * _Nonnull)interstitial;
/// Called when an interstitial ad request completed without an interstitial to show.
- (void)interstitialDidFailToReceiveAd:(RYInterstitialView * _Nonnull)interstitial error:(RYError * _Nonnull)error;
/// Tells the delegate that the user click will open another app, backgrounding the current application.
- (void)interstitialWillLeaveApplication:(RYInterstitialView * _Nonnull)interstitial;
/// Tell the delegate that the user did clicked the close button.
- (void)adViewDidClose;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
